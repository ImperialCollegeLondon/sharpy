name: SHARPy Tests

on:
  push:
    paths:
      - '*.py'
      - 'lib/*'
      - '.github/workflows/sharpy*'
  pull_request:
    branches:
      - main
      - develop
      - 'rc*'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-tags: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 10
          platform: x64
<<<<<<< HEAD
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          python-version: 3.7
      - name: Pre-Install dependencies
        run: |
          gfortran --version
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
          bash miniconda.sh -b -p $HOME/miniconda
          export PATH="$HOME/miniconda/bin:$PATH"
          hash -r
          conda config --set always_yes yes --set changeps1 no
          conda update --name base conda
          conda list --name base conda
          conda init bash
          hash -r
          export QT_QPA_PLATFORM='offscreen'
          sudo apt install libeigen3-dev
          conda env create -f utils/environment_minimal.yml
          conda init bash
          source activate sharpy_minimal
          git submodule init
          git submodule update
          git fetch -t
          mkdir build && cd build
          cmake .. && make install -j 4 && cd ..
=======
      - name: Check that gfortran works
        run: gfortran --version
      - name: Install build package dependencies
        run: sudo apt install libblas-dev liblapack-dev libeigen3-dev
      - name: Install sharpy and coverage using pip
        run: |
          export QT_QPA_PLATFORM='offscreen'
>>>>>>> develop
          pip install .
          pip install coverage
      - name: Run coverage
        run: |
          coverage run -m unittest discover
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          verbose: true
